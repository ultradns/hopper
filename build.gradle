// Hopper
/////////

allprojects {
  version = '1.3.0'
}

apply plugin: 'eclipse'
apply plugin: 'jacoco'

// apply the common neustar gradle tasks to setup artifact repos, etc.
apply from: file('gradle/neustar.gradle')

// If this project has subprojects, you can customize them here
//subprojects {
//    dependencies {
//      // common dependencies for multi-projects
//    }
//}

// If you rename your packages, feel free to rename this..
mainClassName = ext.serviceClassName
def jacocoVer = "0.7.5.201505241946"

allprojects {
  dependencies {
    
    testCompile 'junit:junit:4.+'
    testCompile 'org.mockito:mockito-all:[1.8.5,)'

    compile 'commons-codec:commons-codec:1.6'
    compile 'io.netty:netty:3.5.7.Final'

    // logging
    compile 'org.slf4j:slf4j-api:1.7.+'
    compile 'commons-validator:commons-validator:1.4.+'
    compile 'org.apache.commons:commons-lang3:3.4+'
    compile 'commons-collections:commons-collections:3.2.1'
    compile 'commons-cli:commons-cli:1.2'
    compile 'com.google.guava:guava:27.0.1-jre'
    testRuntime 'org.slf4j:slf4j-ext:1.7.+'
    testRuntime 'org.slf4j:jcl-over-slf4j:1.7.+'
    testRuntime 'org.slf4j:jul-to-slf4j:1.7.+'
    testRuntime 'org.slf4j:log4j-over-slf4j:1.7.+'
    testRuntime 'ch.qos.logback:logback-core:1.0.+'
    testRuntime 'ch.qos.logback:logback-classic:1.0.+'
	
	//JaCoCo
	testCompile "org.jacoco:org.jacoco.core:$jacocoVer"
	testCompile "org.jacoco:org.jacoco.report:$jacocoVer"
	testCompile "org.jacoco:org.jacoco.agent:$jacocoVer"
  }
}

jacoco {
    toolVersion = "$jacocoVer"
    reportsDir = file("$buildDir/reports/jacoco")
}

jacocoTestReport {
    group = "Reporting"
    description = "Generate Jacoco coverage reports after running tests."
    additionalSourceDirs = files(sourceSets.main.allJava.srcDirs)
	executionData = fileTree(dir: 'build/jacoco', include: '*.exec')
}

jacocoTestReport.doFirst {
   classDirectories = fileTree(dir: 'build/classes/main')
   sourceDirectories = files('src/main/java')
}
